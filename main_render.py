from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.enums import ParseMode
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command, CommandStart
from aiogram.client.default import DefaultBotProperties
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import asyncio
import os
from enum import Enum
from aiogram.fsm.storage.memory import MemoryStorage
from datetime import datetime, timedelta

daily_order_counter = {}
order_number_to_user = {}

API_TOKEN = os.getenv("API_TOKEN", "7582557120:AAGJKYgjXIocys3aZyNaVQlp_k892ARKBz0")
ADMIN_ID = int(os.getenv("ADMIN_ID", "1648127193"))
COURIERS_CHAT_ID = int(os.getenv("COURIERS_CHAT_ID", "-1002297990202"))

last_help_message_id = None

# --- Bot Initialization ---
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

# --- Keyboards ---
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìÇ –ö–∞—Ç–∞–ª–æ–≥"), KeyboardButton(text="üõç –ö–æ—Ä–∑–∏–Ω–∞")],
        [KeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã"), KeyboardButton(text="üì¢ –ù–æ–≤–æ—Å—Ç–∏")],
        [KeyboardButton(text="‚≠êÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"), KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")]
    ],
    resize_keyboard=True
)

# --- FSM States ---
class OrderForm(StatesGroup):
    waiting_for_location = State()
    confirm_address = State()
    waiting_for_phone = State()
    waiting_for_address_details = State()

class SearchState(StatesGroup):
    waiting_for_query = State()

class OrderStatus(Enum):
    ACCEPTED = "–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç"
    PREPARING = "–í–∞—à –∑–∞–∫–∞–∑ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è"
    ON_THE_WAY = "–í–∞—à –∑–∞–∫–∞–∑ –µ–¥–µ—Ç –∫ –≤–∞–º"
    DELIVERED = "–í–∞—à –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω"

# --- In-memory Data Storage ---
user_carts = {}
user_orders = {}
order_couriers = {}

# Product catalog with subcategories and item variants
products = {
    "category_fruits": {
        "–Ø–±–ª–æ–∫–∏": {
            "–Ø–±–ª–æ–∫–æ": {
                "–ö—Ä–∞—Å–Ω–æ–µ": {"price": 3, "unit": "–∫–≥"}, 
                "–ó–µ–ª–µ–Ω–æ–µ": {"price": 3, "unit": "–∫–≥"}, 
                "–ñ–µ–ª—Ç–æ–µ": {"price": 3, "unit": "–∫–≥"}
            }
        },
        "–¶–∏—Ç—Ä—É—Å–æ–≤—ã–µ": {
            "–ê–ø–µ–ª—å—Å–∏–Ω": {
                "–û–±—ã—á–Ω—ã–π": {"price": 5, "unit": "–∫–≥"}
            }, 
            "–ú–∞–Ω–¥–∞—Ä–∏–Ω": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "–∫–≥"}
            }, 
            "–õ–∏–º–æ–Ω": {
                "–û–±—ã—á–Ω—ã–π": {"price": 8, "unit": "–∫–≥"}
            }, 
            "–ì—Ä–µ–π–ø—Ñ—Ä—É—Ç": {
                "–û–±—ã—á–Ω—ã–π": {"price": 7, "unit": "–∫–≥"}
            }
        },
        "–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ": {
            "–ë–∞–Ω–∞–Ω": {
                "–û–±—ã—á–Ω—ã–π": {"price": 4, "unit": "–∫–≥"}
            }, 
            "–ö–∏–≤–∏": {
                "–û–±—ã—á–Ω—ã–π": {"price": 7, "unit": "—à—Ç"}
            }, 
            "–ê–Ω–∞–Ω–∞—Å": {
                "–û–±—ã—á–Ω—ã–π": {"price": 15, "unit": "—à—Ç"}
            }
        },
        "–°–µ–∑–æ–Ω–Ω—ã–µ": {
            "–í–∏–Ω–æ–≥—Ä–∞–¥": {
                "–û–±—ã—á–Ω—ã–π": {"price": 8, "unit": "–∫–≥"}
            }, 
            "–ü–µ—Ä—Å–∏–∫": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "–∫–≥"}
            }, 
            "–ù–µ–∫—Ç–∞—Ä–∏–Ω": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "–∫–≥"}
            }, 
            "–°–ª–∏–≤–∞": {
                "–û–±—ã—á–Ω—ã–π": {"price": 4, "unit": "–∫–≥"}
            }, 
            "–ì—Ä—É—à–∞": {
                "–û–±—ã—á–Ω—ã–π": {"price": 4, "unit": "–∫–≥"}
            }
        }
    },
    "category_vegetables": {
        "–ö–æ—Ä–Ω–µ–ø–ª–æ–¥—ã": {
            "–ö–∞—Ä—Ç–æ—à–∫–∞": {
                "–ú–æ–ª–æ–¥–∞—è": {"price": 3, "unit": "–∫–≥"}, 
                "–û–±—ã—á–Ω–∞—è": {"price": 2, "unit": "–∫–≥"}
            }, 
            "–ú–æ—Ä–∫–æ–≤—å": {
                "–û–±—ã—á–Ω–∞—è": {"price": 1, "unit": "–∫–≥"}
            }, 
            "–°–≤–µ–∫–ª–∞": {
                "–û–±—ã—á–Ω–∞—è": {"price": 2, "unit": "–∫–≥"}
            }
        },
        "–ó–µ–ª–µ–Ω—å": {
            "–õ—É–∫ –∑–µ–ª–µ–Ω—ã–π": {
                "–û–±—ã—á–Ω—ã–π": {"price": 3, "unit": "–∫–≥"}
            }, 
            "–£–∫—Ä–æ–ø": {
                "–û–±—ã—á–Ω—ã–π": {"price": 5, "unit": "–∫–≥"}
            }, 
            "–ü–µ—Ç—Ä—É—à–∫–∞": {
                "–û–±—ã—á–Ω–∞—è": {"price": 5, "unit": "–∫–≥"}
            }, 
            "–ö–∏–Ω–∑–∞": {
                "–û–±—ã—á–Ω–∞—è": {"price": 4, "unit": "–∫–≥"}
            }
        },
        "–û–≤–æ—â–∏ –¥–ª—è —Å–∞–ª–∞—Ç–∞": {
            "–û–≥—É—Ä–µ—Ü": {
                "–ü–∞—Ä–Ω–∏–∫–æ–≤—ã–π": {"price": 4, "unit": "–∫–≥"}, 
                "–ì—Ä—É–Ω—Ç–æ–≤—ã–π": {"price": 3, "unit": "–∫–≥"}
            }, 
            "–ü–æ–º–∏–¥–æ—Ä": {
                "–†–æ–∑–æ–≤—ã–π": {"price": 5, "unit": "–∫–≥"}, 
                "–ö—Ä–∞—Å–Ω—ã–π": {"price": 4, "unit": "–∫–≥"}
            }, 
            "–ö–∞–ø—É—Å—Ç–∞": {
                "–ë–µ–ª–æ–∫–æ—á–∞–Ω–Ω–∞—è": {"price": 3, "unit": "—à—Ç"}
            }
        },
        "–ü—Ä–∏–ø—Ä–∞–≤—ã": {
            "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π": {
                "–û–±—ã—á–Ω—ã–π": {"price": 2, "unit": "–∫–≥"}
            }, 
            "–ß–µ—Å–Ω–æ–∫": {
                "–û–±—ã—á–Ω—ã–π": {"price": 3, "unit": "–∫–≥"}
            }, 
            "–ü–µ—Ä–µ—Ü –±–æ–ª–≥–∞—Ä—Å–∫–∏–π": {
                "–û–±—ã—á–Ω—ã–π": {"price": 5, "unit": "–∫–≥"}
            }, 
            "–ü–µ—Ä–µ—Ü –æ—Å—Ç—Ä—ã–π": {
                "–û–±—ã—á–Ω—ã–π": {"price": 8, "unit": "–∫–≥"}
            }
        }
    },
    "category_drinks": {
        "–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ": {
            "Coca-Cola": {
                "0.5–ª": {"price": 6, "unit": "—à—Ç"},
                "1–ª": {"price": 10, "unit": "—à—Ç"},
                "1.5–ª": {"price": 12, "unit": "—à—Ç"}
            }, 
            "Pepsi": {
                "0.5–ª": {"price": 6, "unit": "—à—Ç"},
                "1–ª": {"price": 10, "unit": "—à—Ç"},
                "1.5–ª": {"price": 12, "unit": "—à—Ç"}
            }, 
            "Fanta": {
                "0.5–ª": {"price": 6, "unit": "—à—Ç"},
                "1–ª": {"price": 10, "unit": "—à—Ç"}
            }, 
            "Sprite": {
                "0.5–ª": {"price": 6, "unit": "—à—Ç"},
                "1–ª": {"price": 10, "unit": "—à—Ç"}
            }, 
            "7UP": {
                "0.5–ª": {"price": 6, "unit": "—à—Ç"}
            }
        },
        "–°–æ–∫–∏": {
            "–°–æ–∫ —è–±–ª–æ—á–Ω—ã–π J7": {
                "1–ª": {"price": 8, "unit": "—à—Ç"}
            }, 
            "–°–æ–∫ –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π J7": {
                "1–ª": {"price": 8, "unit": "—à—Ç"}
            }, 
            "–°–æ–∫ —Ç–æ–º–∞—Ç–Ω—ã–π": {
                "1–ª": {"price": 7, "unit": "—à—Ç"}
            }, 
            "–ù–µ–∫—Ç–∞—Ä –ø–µ—Ä—Å–∏–∫–æ–≤—ã–π": {
                "1–ª": {"price": 6, "unit": "—à—Ç"}
            }
        },
        "–í–æ–¥–∞": {
            "–í–æ–¥–∞ –ï—Å—Å–µ–Ω—Ç—É–∫–∏": {
                "0.5–ª": {"price": 4, "unit": "—à—Ç"}
            }, 
            "–í–æ–¥–∞ –æ–±—ã—á–Ω–∞—è": {
                "1.5–ª": {"price": 2, "unit": "—à—Ç"},
                "5–ª": {"price": 5, "unit": "—à—Ç"}
            }, 
            "–í–æ–¥–∞ –≥–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è": {
                "0.5–ª": {"price": 3, "unit": "—à—Ç"}
            }
        },
        "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏": {
            "Red Bull": {
                "250–º–ª": {"price": 12, "unit": "—à—Ç"}
            }, 
            "Monster": {
                "500–º–ª": {"price": 10, "unit": "—à—Ç"}
            }, 
            "Burn": {
                "250–º–ª": {"price": 8, "unit": "—à—Ç"}
            }
        },
        "–ß–∞–π/–ö–æ—Ñ–µ": {
            "–•–æ–ª–æ–¥–Ω—ã–π —á–∞–π Lipton": {
                "0.5–ª": {"price": 5, "unit": "—à—Ç"}
            }, 
            "–ö–≤–∞—Å –ù–∏–∫–æ–ª–∞": {
                "1–ª": {"price": 4, "unit": "—à—Ç"}
            }, 
            "–ö–æ–º–ø–æ—Ç –¥–æ–º–∞—à–Ω–∏–π": {
                "1–ª": {"price": 4, "unit": "—à—Ç"}
            }
        }
    },
    "category_snacks": {
        "–ß–∏–ø—Å—ã": {
            "Lay's": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ": {"price": 5, "unit": "—à—Ç"}, 
                "–°–º–µ—Ç–∞–Ω–∞-–ª—É–∫": {"price": 5, "unit": "—à—Ç"},
                "–°—ã—Ä": {"price": 5, "unit": "—à—Ç"}
            }, 
            "Pringles": {
                "Original": {"price": 8, "unit": "—à—Ç"},
                "–°–º–µ—Ç–∞–Ω–∞-–ª—É–∫": {"price": 8, "unit": "—à—Ç"}
            }, 
            "Estrella": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ": {"price": 4, "unit": "—à—Ç"}
            }
        },
        "–°—É—Ö–∞—Ä–∏–∫–∏": {
            "–ö–∏—Ä–∏–µ—à–∫–∏": {
                "–ë–µ–∫–æ–Ω": {"price": 3, "unit": "—à—Ç"}, 
                "–°—ã—Ä": {"price": 3, "unit": "—à—Ç"}
            }, 
            "–°—É—Ö–∞—Ä–∏–∫–∏ —Ä–∂–∞–Ω—ã–µ": {
                "–û–±—ã—á–Ω—ã–µ": {"price": 2, "unit": "—à—Ç"}
            }
        },
        "–®–æ–∫–æ–ª–∞–¥": {
            "Snickers": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "—à—Ç"}
            }, 
            "Twix": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "—à—Ç"}
            }, 
            "KitKat": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "—à—Ç"}
            }, 
            "Alpen Gold": {
                "–ú–æ–ª–æ—á–Ω—ã–π": {"price": 8, "unit": "—à—Ç"}
            }, 
            "–ê–ª–µ–Ω–∫–∞": {
                "–ú–æ–ª–æ—á–Ω—ã–π": {"price": 5, "unit": "—à—Ç"}
            }
        },
        "–ü–µ—á–µ–Ω—å–µ": {
            "Oreo": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ": {"price": 5, "unit": "—à—Ç"}
            }, 
            "–Æ–±–∏–ª–µ–π–Ω–æ–µ": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ": {"price": 4, "unit": "—à—Ç"}
            }, 
            "–ö—Ä–µ–∫–µ—Ä TUC": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π": {"price": 4, "unit": "—à—Ç"}
            }
        },
        "–û—Ä–µ—Ö–∏/–°–µ–º–µ—á–∫–∏": {
            "–°–µ–º–µ—á–∫–∏": {
                "–ñ–∞—Ä–µ–Ω—ã–µ": {"price": 2, "unit": "—à—Ç"}
            }, 
            "–ê—Ä–∞—Ö–∏—Å": {
                "–°–æ–ª–µ–Ω—ã–π": {"price": 4, "unit": "—à—Ç"}
            }, 
            "–ú–∏–Ω–¥–∞–ª—å": {
                "–û–±—ã—á–Ω—ã–π": {"price": 12, "unit": "—à—Ç"}
            }, 
            "–§–∏—Å—Ç–∞—à–∫–∏": {
                "–°–æ–ª–µ–Ω—ã–µ": {"price": 15, "unit": "—à—Ç"}
            }
        }
    },
    "category_milks": {
        "–ú–æ–ª–æ–∫–æ": {
            "–ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∏–Ω–æ": {
                "1–ª": {"price": 18, "unit": "—à—Ç"}
            }, 
            "–ú–æ–ª–æ–∫–æ –¥–æ–º–∞—à–Ω–µ–µ": {
                "1–ª": {"price": 15, "unit": "—à—Ç"}
            }, 
            "–í–µ—Å–µ–ª—ã–π –º–æ–ª–æ—á–Ω–∏–∫": {
                "1–ª": {"price": 16, "unit": "—à—Ç"}
            }
        },
        "–ö–∏—Å–ª–æ–º–æ–ª–æ—á–Ω—ã–µ": {
            "–ö–µ—Ñ–∏—Ä": {
                "–ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∏–Ω–æ": {"price": 12, "unit": "—à—Ç"}
            }, 
            "–†—è–∂–µ–Ω–∫–∞": {
                "–û–±—ã—á–Ω–∞—è": {"price": 15, "unit": "—à—Ç"}
            }, 
            "–ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∞": {
                "–û–±—ã—á–Ω–∞—è": {"price": 13, "unit": "—à—Ç"}
            }, 
            "–ê–π—Ä–∞–Ω": {
                "–û–±—ã—á–Ω—ã–π": {"price": 10, "unit": "—à—Ç"}
            }
        },
        "–°–º–µ—Ç–∞–Ω–∞/–¢–≤–æ—Ä–æ–≥": {
            "–°–º–µ—Ç–∞–Ω–∞": {
                "20%": {"price": 14, "unit": "—à—Ç"}, 
                "–î–æ–º–∞—à–Ω—è—è": {"price": 18, "unit": "—à—Ç"}
            }, 
            "–¢–≤–æ—Ä–æ–≥": {
                "–ó–µ—Ä–Ω–∏—Å—Ç—ã–π": {"price": 16, "unit": "—à—Ç"}, 
                "–û–±–µ–∑–∂–∏—Ä–µ–Ω–Ω—ã–π": {"price": 14, "unit": "—à—Ç"}
            }
        },
        "–ô–æ–≥—É—Ä—Ç—ã": {
            "–î–∞–Ω–æ–Ω": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π": {"price": 8, "unit": "—à—Ç"}
            }, 
            "–ê–∫—Ç–∏–≤–∏–∞": {
                "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è": {"price": 9, "unit": "—à—Ç"}
            }, 
            "–ô–æ–≥—É—Ä—Ç –¥–æ–º–∞—à–Ω–∏–π": {
                "–û–±—ã—á–Ω—ã–π": {"price": 6, "unit": "—à—Ç"}
            }
        },
        "–°—ã—Ä/–ú–∞—Å–ª–æ": {
            "–°—ã—Ä": {
                "–†–æ—Å—Å–∏–π—Å–∫–∏–π": {"price": 25, "unit": "–∫–≥"}, 
                "–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π": {"price": 30, "unit": "–∫–≥"}
            }, 
            "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ": {
                "–û–±—ã—á–Ω–æ–µ": {"price": 20, "unit": "—à—Ç"}
            }, 
            "–°–ª–∏–≤–∫–∏": {
                "20%": {"price": 19, "unit": "—à—Ç"}
            }
        }
    }
}

# Category names in Russian
category_names = {
    "category_fruits": "–§—Ä—É–∫—Ç—ã",
    "category_vegetables": "–û–≤–æ—â–∏", 
```
    "category_drinks": "–ù–∞–ø–∏—Ç–∫–∏",
    "category_snacks": "–°–Ω–µ–∫–∏",
    "category_milks": "–ú–æ–ª–æ—á–∫–∞"
}

active_users = set()
user_search_history = {}
search_cache = {}
popular_searches = ["—è–±–ª–æ–∫–æ", "–º–æ–ª–æ–∫–æ", "—Ö–ª–µ–±", "–∫–∞—Ä—Ç–æ—à–∫–∞", "–±–∞–Ω–∞–Ω"]

# Global mapping for shorter callback data
current_subcategory_mapping = {}
current_item_mapping = {}

# –ó–¥–µ—Å—å –≤—Å—Ç–∞–≤—å—Ç–µ –≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–∑ main.py, –Ω–æ –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞ keep_alive –∏ –±–µ–∑ –≤—ã–∑–æ–≤–∞ keep_alive()

# --- Command Handlers ---
@dp.message(CommandStart())
async def send_welcome(message: Message):
    user_id = message.from_user.id
    active_users.add(user_id)

    kb = InlineKeyboardBuilder()
    kb.button(text="–§—Ä—É–∫—Ç—ã", callback_data="category_fruits")
    kb.button(text="–û–≤–æ—â–∏", callback_data="category_vegetables")
    kb.button(text="–ù–∞–ø–∏—Ç–∫–∏", callback_data="category_drinks")
    kb.button(text="–°–Ω–µ–∫–∏", callback_data="category_snacks")
    kb.button(text="–ú–æ–ª–æ—á–∫–∞", callback_data="category_milks")
    kb.adjust(2,2,1)

    # Add search button in initial start menu
    kb.row(types.InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data="search_menu"))

    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ñ–¥—ë–º –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ üíú",
        reply_markup=main_menu
    )
    await bot.send_sticker(
        message.chat.id,
        "CAACAgQAAxkBAAIJT2gmdq7qFlY80egtqdn3Q0QPoA5iAAISDQAC1MiAUAXbnVAhxur0NgQ"
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=kb.as_markup())

# ... –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–∑ main.py ...

async def main():
    print("Bot is starting...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())